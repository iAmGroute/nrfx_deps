
name: build

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - run: rm -rf output/
    - run: ls
    - run: ls sources/*
    - name: Run 'absolute_includes.py'
      run: |
        mkdir output/
        cd sources/
        python3 ../absolute_includes.py nrfx/ ../output/ | tee ../output/log.txt
        cd ../
    - name: Add 'output/README.md'
      run: |
        echo "## Final header files"                                >> output/README.md
        echo "This directory contains the processed header files"   >> output/README.md
        echo "that are ready to be #included.  "                    >> output/README.md
        echo "Check 'log.txt' for details on `#include` statements" >> output/README.md
        echo "referring to header files that were not found.  "     >> output/README.md
        echo ""                                                     >> output/README.md
        echo "#### Automated Build"                                 >> output/README.md
        echo "Run ${GITHUB_RUN_ID}  "                               >> output/README.md
        echo "Commit ${GITHUB_SHA}  "                               >> output/README.md
        echo ""                                                     >> output/README.md
    - run: ls *
    - name: Commit files
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action - ${GITHUB_ACTOR}"
        git add .
        git commit -m "Automated build ${GITHUB_SHA:0:7}"
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - run: zip -r nrfx_deps.zip output/
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "auto_${{github.run_number}}_${{github.run_id}}_${{github.sha}}"
        release_name: Automated release ${{ github.run_number }}
        draft: true
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./nrfx_deps.zip
        asset_name: nrfx_deps.zip
        asset_content_type: application/zip

